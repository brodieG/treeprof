% Generated by roxygen2 (4.0.1): do not edit by hand
\docType{package}
\name{treeprof}
\alias{treeprof}
\alias{treeprof-package}
\title{Profile with Rprof and Display As Tree}
\usage{
treeprof(expr = NULL, target.time = 5, times = NULL, interval = 0.001,
<<<<<<< HEAD
<<<<<<< HEAD
  file = NULL, eval.frame = parent.frame(), gc.torture = FALSE,
  verbose = TRUE)
=======
  file = NULL, eval.frame = parent.frame(), gc.torture = FALSE)
>>>>>>> 75d32eb92dbce607391b8bcf59be3a129015cdd0
=======
  file = NULL, eval.frame = parent.frame(), gc.torture = FALSE,
  verbose = TRUE)
>>>>>>> 2a504db3379c01ea7079dc7c05a7fc2800124694
}
\arguments{
\item{expr}{expression to profile}

\item{interval}{numeric to dump stack at, NULL to auto-select (see notes)}

\item{target.time}{numeric number of seconds to run benchmark for; this is an
approximate suggestion and only holds when the expression excutes faster
than the \code{`target.time`}.}

\item{times}{integer how many times to run the expression; if this is set to
a value other than null parameter \code{`target.time`} is ignored}

\item{eval.fame}{an environment to evaluate \code{`expr`} in}

\item{gc.torture}{whether to enable \code{`\link{gctorture}`}, note that this
should not be necessary since \code{`treeprof`} automatically re-runs a
function enough times to get reasonable resolution; you will get more
stable results by running the same function thousands of times than by
using `gctorture` to slow it down by 10-1000x and just running it a couple
of times.}
<<<<<<< HEAD
<<<<<<< HEAD

\item{verbose}{logical(1L) whether to output status to screen}
=======
>>>>>>> 75d32eb92dbce607391b8bcf59be3a129015cdd0
=======

\item{verbose}{logical(1L) whether to output status to screen}
>>>>>>> 2a504db3379c01ea7079dc7c05a7fc2800124694
}
\value{
a treeprof object, which is really just a `data.table` with some
  attributes attached
}
\description{
Uses RProf to profile an expression which will be repeatedly evaluated until
target execution time is met.

treeprof
}
\note{
timings are approximate as there is some small overhead to manage the
  repeated tests
}

